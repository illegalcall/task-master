version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - app-network-dev
    volumes:
      - pgdata-dev:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-dev
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - app-network-dev

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-dev
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    restart: on-failure
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "jobs:1:1"
    networks:
      - app-network-dev

  redis:
    image: redis:7-alpine
    container_name: redis-dev
    ports:
      - "6379:6379"
    networks:
      - app-network-dev

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev.api
    container_name: taskmaster-api-dev
    volumes:
      - .:/app
      - go-modules:/go/pkg/mod
    ports:
      - "8080:8080"
    restart: on-failure
    environment:
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_BROKER: ${KAFKA_BROKER}
      REDIS_ADDR: ${REDIS_ADDR}
      GO_ENV: ${GO_ENV}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - app-network-dev
    depends_on:
      - kafka

  worker:
    build:
      context: .
      dockerfile: Dockerfile.dev.worker
    container_name: taskmaster-worker-dev
    volumes:
      - .:/app
      - go-modules:/go/pkg/mod
    environment:
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_BROKER: ${KAFKA_BROKER}
      REDIS_ADDR: ${REDIS_ADDR}
      GO_ENV: ${GO_ENV}
    restart: on-failure
    networks:
      - app-network-dev
    depends_on:
      - kafka

networks:
  app-network-dev:
    driver: bridge

volumes:
  pgdata-dev:
  go-modules: 