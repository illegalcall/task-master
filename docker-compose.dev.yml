version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: postgres-db-dev
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: taskmaster
    ports:
      - "5432:5432"
    networks:
      - app-network-dev
    volumes:
      - pgdata-dev:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-dev
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network-dev

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-dev
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network-dev

  redis:
    image: redis:7-alpine
    container_name: redis-dev
    ports:
      - "6379:6379"
    networks:
      - app-network-dev

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev.api
    container_name: taskmaster-api-dev
    volumes:
      - .:/app
      - go-modules:/go/pkg/mod
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: "postgres://admin:admin@postgres-db-dev:5432/taskmaster?sslmode=disable"
      KAFKA_BROKER: "kafka:9092"
      JWT_SECRET: "supersecretkey"
      REDIS_ADDR: "redis:6379"
      GO_ENV: "development"
    networks:
      - app-network-dev

  worker:
    build:
      context: .
      dockerfile: Dockerfile.dev.worker
    container_name: taskmaster-worker-dev
    volumes:
      - .:/app
      - go-modules:/go/pkg/mod
    environment:
      DATABASE_URL: "postgres://admin:admin@postgres-db-dev:5432/taskmaster?sslmode=disable"
      KAFKA_BROKER: "kafka:9092"
      REDIS_ADDR: "redis:6379"
      GO_ENV: "development"
    networks:
      - app-network-dev

networks:
  app-network-dev:
    driver: bridge

volumes:
  pgdata-dev:
  go-modules: 